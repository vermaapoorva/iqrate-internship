/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of NewDealProduct
 */
class NewDealProduct extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.item_price = this.constructor.getValue(obj.item_price);
        this.quantity = this.constructor.getValue(obj.quantity);
        this.discount_percentage = this.constructor.getValue(obj.discount_percentage, 0);
        this.duration = this.constructor.getValue(obj.duration, 1);
        this.product_variation_id = this.constructor.getValue(obj.product_variation_id);
        this.comments = this.constructor.getValue(obj.comments);
        this.enabled_flag = this.constructor.getValue(obj.enabled_flag);
        this.product_id = this.constructor.getValue(obj.product_id);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'item_price', realName: 'item_price' },
            { name: 'quantity', realName: 'quantity' },
            { name: 'discount_percentage', realName: 'discount_percentage' },
            { name: 'duration', realName: 'duration' },
            { name: 'product_variation_id', realName: 'product_variation_id' },
            { name: 'comments', realName: 'comments' },
            { name: 'enabled_flag', realName: 'enabled_flag' },
            { name: 'product_id', realName: 'product_id' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = NewDealProduct;
