/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of ValuesTotal
 */
class ValuesTotal extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.value = this.constructor.getValue(obj.value);
        this.count = this.constructor.getValue(obj.count);
        this.value_converted = this.constructor.getValue(obj.value_converted);
        this.value_formatted = this.constructor.getValue(obj.value_formatted);
        this.value_converted_formatted = this.constructor.getValue(obj.value_converted_formatted);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'value', realName: 'value' },
            { name: 'count', realName: 'count' },
            { name: 'value_converted', realName: 'value_converted' },
            { name: 'value_formatted', realName: 'value_formatted' },
            { name: 'value_converted_formatted', realName: 'value_converted_formatted' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = ValuesTotal;
