/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Age
 */
class Age extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.y = this.constructor.getValue(obj.y);
        this.m = this.constructor.getValue(obj.m);
        this.d = this.constructor.getValue(obj.d);
        this.h = this.constructor.getValue(obj.h);
        this.i = this.constructor.getValue(obj.i);
        this.s = this.constructor.getValue(obj.s);
        this.total_seconds = this.constructor.getValue(obj.total_seconds);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'y', realName: 'y' },
            { name: 'm', realName: 'm' },
            { name: 'd', realName: 'd' },
            { name: 'h', realName: 'h' },
            { name: 'i', realName: 'i' },
            { name: 's', realName: 's' },
            { name: 'total_seconds', realName: 'total_seconds' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Age;
