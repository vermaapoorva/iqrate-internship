/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of DealOrganizationData
 */
class DealOrganizationData extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.name = this.constructor.getValue(obj.name);
        this.people_count = this.constructor.getValue(obj.people_count);
        this.owner_id = this.constructor.getValue(obj.owner_id);
        this.address = this.constructor.getValue(obj.address);
        this.active_flag = this.constructor.getValue(obj.active_flag);
        this.cc_email = this.constructor.getValue(obj.cc_email);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'name', realName: 'name' },
            { name: 'people_count', realName: 'people_count' },
            { name: 'owner_id', realName: 'owner_id' },
            { name: 'address', realName: 'address' },
            { name: 'active_flag', realName: 'active_flag' },
            { name: 'cc_email', realName: 'cc_email' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = DealOrganizationData;
