/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Deal1
 */
class Deal1 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.creator_user_id = this.constructor.getValue(obj.creator_user_id);
        this.user_id = this.constructor.getValue(obj.user_id);
        this.person_id = this.constructor.getValue(obj.person_id);
        this.org_id = this.constructor.getValue(obj.org_id);
        this.stage_id = this.constructor.getValue(obj.stage_id);
        this.title = this.constructor.getValue(obj.title);
        this.value = this.constructor.getValue(obj.value);
        this.currency = this.constructor.getValue(obj.currency);
        this.add_time = this.constructor.getValue(obj.add_time);
        this.update_time = this.constructor.getValue(obj.update_time);
        this.stage_change_time = this.constructor.getValue(obj.stage_change_time);
        this.active = this.constructor.getValue(obj.active);
        this.deleted = this.constructor.getValue(obj.deleted);
        this.status = this.constructor.getValue(obj.status);
        this.probability = this.constructor.getValue(obj.probability);
        this.next_activity_date = this.constructor.getValue(obj.next_activity_date);
        this.next_activity_time = this.constructor.getValue(obj.next_activity_time);
        this.next_activity_id = this.constructor.getValue(obj.next_activity_id);
        this.last_activity_id = this.constructor.getValue(obj.last_activity_id);
        this.last_activity_date = this.constructor.getValue(obj.last_activity_date);
        this.lost_reason = this.constructor.getValue(obj.lost_reason);
        this.visible_to = this.constructor.getValue(obj.visible_to);
        this.close_time = this.constructor.getValue(obj.close_time);
        this.pipeline_id = this.constructor.getValue(obj.pipeline_id);
        this.won_time = this.constructor.getValue(obj.won_time);
        this.first_won_time = this.constructor.getValue(obj.first_won_time);
        this.lost_time = this.constructor.getValue(obj.lost_time);
        this.products_count = this.constructor.getValue(obj.products_count);
        this.files_count = this.constructor.getValue(obj.files_count);
        this.notes_count = this.constructor.getValue(obj.notes_count);
        this.followers_count = this.constructor.getValue(obj.followers_count);
        this.email_messages_count = this.constructor.getValue(obj.email_messages_count);
        this.activities_count = this.constructor.getValue(obj.activities_count);
        this.done_activities_count = this.constructor.getValue(obj.done_activities_count);
        this.undone_activities_count = this.constructor.getValue(obj.undone_activities_count);
        this.reference_activities_count = this.constructor.getValue(obj.reference_activities_count);
        this.participants_count = this.constructor.getValue(obj.participants_count);
        this.expected_close_date = this.constructor.getValue(obj.expected_close_date);
        this.last_incoming_mail_time = this.constructor.getValue(obj.last_incoming_mail_time);
        this.last_outgoing_mail_time = this.constructor.getValue(obj.last_outgoing_mail_time);
        this.label = this.constructor.getValue(obj.label);
        this.stage_order_nr = this.constructor.getValue(obj.stage_order_nr);
        this.person_name = this.constructor.getValue(obj.person_name);
        this.org_name = this.constructor.getValue(obj.org_name);
        this.next_activity_subject = this.constructor.getValue(obj.next_activity_subject);
        this.next_activity_type = this.constructor.getValue(obj.next_activity_type);
        this.next_activity_duration = this.constructor.getValue(obj.next_activity_duration);
        this.next_activity_note = this.constructor.getValue(obj.next_activity_note);
        this.formatted_value = this.constructor.getValue(obj.formatted_value);
        this.weighted_value = this.constructor.getValue(obj.weighted_value);
        this.formatted_weighted_value = this.constructor.getValue(obj.formatted_weighted_value);
        this.weighted_value_currency = this.constructor.getValue(obj.weighted_value_currency);
        this.rotten_time = this.constructor.getValue(obj.rotten_time);
        this.owner_name = this.constructor.getValue(obj.owner_name);
        this.cc_email = this.constructor.getValue(obj.cc_email);
        this.org_hidden = this.constructor.getValue(obj.org_hidden);
        this.person_hidden = this.constructor.getValue(obj.person_hidden);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'creator_user_id', realName: 'creator_user_id' },
            { name: 'user_id', realName: 'user_id' },
            { name: 'person_id', realName: 'person_id' },
            { name: 'org_id', realName: 'org_id' },
            { name: 'stage_id', realName: 'stage_id' },
            { name: 'title', realName: 'title' },
            { name: 'value', realName: 'value' },
            { name: 'currency', realName: 'currency' },
            { name: 'add_time', realName: 'add_time' },
            { name: 'update_time', realName: 'update_time' },
            { name: 'stage_change_time', realName: 'stage_change_time' },
            { name: 'active', realName: 'active' },
            { name: 'deleted', realName: 'deleted' },
            { name: 'status', realName: 'status' },
            { name: 'probability', realName: 'probability' },
            { name: 'next_activity_date', realName: 'next_activity_date' },
            { name: 'next_activity_time', realName: 'next_activity_time' },
            { name: 'next_activity_id', realName: 'next_activity_id' },
            { name: 'last_activity_id', realName: 'last_activity_id' },
            { name: 'last_activity_date', realName: 'last_activity_date' },
            { name: 'lost_reason', realName: 'lost_reason' },
            { name: 'visible_to', realName: 'visible_to' },
            { name: 'close_time', realName: 'close_time' },
            { name: 'pipeline_id', realName: 'pipeline_id' },
            { name: 'won_time', realName: 'won_time' },
            { name: 'first_won_time', realName: 'first_won_time' },
            { name: 'lost_time', realName: 'lost_time' },
            { name: 'products_count', realName: 'products_count' },
            { name: 'files_count', realName: 'files_count' },
            { name: 'notes_count', realName: 'notes_count' },
            { name: 'followers_count', realName: 'followers_count' },
            { name: 'email_messages_count', realName: 'email_messages_count' },
            { name: 'activities_count', realName: 'activities_count' },
            { name: 'done_activities_count', realName: 'done_activities_count' },
            { name: 'undone_activities_count', realName: 'undone_activities_count' },
            { name: 'reference_activities_count', realName: 'reference_activities_count' },
            { name: 'participants_count', realName: 'participants_count' },
            { name: 'expected_close_date', realName: 'expected_close_date' },
            { name: 'last_incoming_mail_time', realName: 'last_incoming_mail_time' },
            { name: 'last_outgoing_mail_time', realName: 'last_outgoing_mail_time' },
            { name: 'label', realName: 'label' },
            { name: 'stage_order_nr', realName: 'stage_order_nr' },
            { name: 'person_name', realName: 'person_name' },
            { name: 'org_name', realName: 'org_name' },
            { name: 'next_activity_subject', realName: 'next_activity_subject' },
            { name: 'next_activity_type', realName: 'next_activity_type' },
            { name: 'next_activity_duration', realName: 'next_activity_duration' },
            { name: 'next_activity_note', realName: 'next_activity_note' },
            { name: 'formatted_value', realName: 'formatted_value' },
            { name: 'weighted_value', realName: 'weighted_value' },
            { name: 'formatted_weighted_value', realName: 'formatted_weighted_value' },
            { name: 'weighted_value_currency', realName: 'weighted_value_currency' },
            { name: 'rotten_time', realName: 'rotten_time' },
            { name: 'owner_name', realName: 'owner_name' },
            { name: 'cc_email', realName: 'cc_email' },
            { name: 'org_hidden', realName: 'org_hidden' },
            { name: 'person_hidden', realName: 'person_hidden' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Deal1;
