/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of BaseMailThread
 */
class BaseMailThread extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.account_id = this.constructor.getValue(obj.account_id);
        this.user_id = this.constructor.getValue(obj.user_id);
        this.subject = this.constructor.getValue(obj.subject);
        this.snippet = this.constructor.getValue(obj.snippet);
        this.read_flag = this.constructor.getValue(obj.read_flag);
        this.mail_tracking_status = this.constructor.getValue(obj.mail_tracking_status);
        this.has_attachments_flag = this.constructor.getValue(obj.has_attachments_flag);
        this.has_inline_attachments_flag =
          this.constructor.getValue(obj.has_inline_attachments_flag);
        this.has_real_attachments_flag = this.constructor.getValue(obj.has_real_attachments_flag);
        this.deleted_flag = this.constructor.getValue(obj.deleted_flag);
        this.synced_flag = this.constructor.getValue(obj.synced_flag);
        this.smart_bcc_flag = this.constructor.getValue(obj.smart_bcc_flag);
        this.mail_link_tracking_enabled_flag =
          this.constructor.getValue(obj.mail_link_tracking_enabled_flag);
        this.write_flag = this.constructor.getValue(obj.write_flag);
        this.parties = this.constructor.getValue(obj.parties);
        this.drafts_parties = this.constructor.getValue(obj.drafts_parties);
        this.folders = this.constructor.getValue(obj.folders);
        this.version = this.constructor.getValue(obj.version);
        this.snippet_draft = this.constructor.getValue(obj.snippet_draft);
        this.snippet_sent = this.constructor.getValue(obj.snippet_sent);
        this.message_count = this.constructor.getValue(obj.message_count);
        this.has_draft_flag = this.constructor.getValue(obj.has_draft_flag);
        this.has_sent_flag = this.constructor.getValue(obj.has_sent_flag);
        this.archived_flag = this.constructor.getValue(obj.archived_flag);
        this.shared_flag = this.constructor.getValue(obj.shared_flag);
        this.external_deleted_flag = this.constructor.getValue(obj.external_deleted_flag);
        this.first_message_to_me_flag = this.constructor.getValue(obj.first_message_to_me_flag);
        this.last_message_timestamp = this.constructor.getValue(obj.last_message_timestamp);
        this.first_message_timestamp = this.constructor.getValue(obj.first_message_timestamp);
        this.last_message_sent_timestamp =
          this.constructor.getValue(obj.last_message_sent_timestamp);
        this.last_message_received_timestamp =
          this.constructor.getValue(obj.last_message_received_timestamp);
        this.add_time = this.constructor.getValue(obj.add_time);
        this.update_time = this.constructor.getValue(obj.update_time);
        this.deal_id = this.constructor.getValue(obj.deal_id);
        this.deal_status = this.constructor.getValue(obj.deal_status);
        this.all_messages_sent_flag = this.constructor.getValue(obj.all_messages_sent_flag);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'account_id', realName: 'account_id' },
            { name: 'user_id', realName: 'user_id' },
            { name: 'subject', realName: 'subject' },
            { name: 'snippet', realName: 'snippet' },
            { name: 'read_flag', realName: 'read_flag' },
            { name: 'mail_tracking_status', realName: 'mail_tracking_status' },
            { name: 'has_attachments_flag', realName: 'has_attachments_flag' },
            { name: 'has_inline_attachments_flag', realName: 'has_inline_attachments_flag' },
            { name: 'has_real_attachments_flag', realName: 'has_real_attachments_flag' },
            { name: 'deleted_flag', realName: 'deleted_flag' },
            { name: 'synced_flag', realName: 'synced_flag' },
            { name: 'smart_bcc_flag', realName: 'smart_bcc_flag' },
            {
                name: 'mail_link_tracking_enabled_flag',
                realName: 'mail_link_tracking_enabled_flag',
            },
            { name: 'write_flag', realName: 'write_flag' },
            { name: 'parties', realName: 'parties', type: 'Parties' },
            { name: 'drafts_parties', realName: 'drafts_parties', array: true },
            { name: 'folders', realName: 'folders', array: true },
            { name: 'version', realName: 'version' },
            { name: 'snippet_draft', realName: 'snippet_draft' },
            { name: 'snippet_sent', realName: 'snippet_sent' },
            { name: 'message_count', realName: 'message_count' },
            { name: 'has_draft_flag', realName: 'has_draft_flag' },
            { name: 'has_sent_flag', realName: 'has_sent_flag' },
            { name: 'archived_flag', realName: 'archived_flag' },
            { name: 'shared_flag', realName: 'shared_flag' },
            { name: 'external_deleted_flag', realName: 'external_deleted_flag' },
            { name: 'first_message_to_me_flag', realName: 'first_message_to_me_flag' },
            {
                name: 'last_message_timestamp',
                realName: 'last_message_timestamp',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'first_message_timestamp',
                realName: 'first_message_timestamp',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'last_message_sent_timestamp',
                realName: 'last_message_sent_timestamp',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'last_message_received_timestamp',
                realName: 'last_message_received_timestamp',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'add_time', realName: 'add_time', isDateTime: true, dateTimeValue: 'rfc3339' },
            {
                name: 'update_time',
                realName: 'update_time',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'deal_id', realName: 'deal_id' },
            { name: 'deal_status', realName: 'deal_status' },
            { name: 'all_messages_sent_flag', realName: 'all_messages_sent_flag' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = BaseMailThread;
