/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of ProductField
 */
class ProductField extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.name = this.constructor.getValue(obj.name);
        this.options = this.constructor.getValue(obj.options);
        this.field_type = this.constructor.getValue(obj.field_type);
        this.id = this.constructor.getValue(obj.id);
        this.key = this.constructor.getValue(obj.key);
        this.order_nr = this.constructor.getValue(obj.order_nr);
        this.add_time = this.constructor.getValue(obj.add_time);
        this.update_time = this.constructor.getValue(obj.update_time);
        this.last_updated_by_user_id = this.constructor.getValue(obj.last_updated_by_user_id);
        this.active_flag = this.constructor.getValue(obj.active_flag);
        this.edit_flag = this.constructor.getValue(obj.edit_flag);
        this.add_visible_flag = this.constructor.getValue(obj.add_visible_flag);
        this.important_flag = this.constructor.getValue(obj.important_flag);
        this.bulk_edit_allowed = this.constructor.getValue(obj.bulk_edit_allowed);
        this.searchable_flag = this.constructor.getValue(obj.searchable_flag);
        this.filtering_allowed = this.constructor.getValue(obj.filtering_allowed);
        this.sortable_flag = this.constructor.getValue(obj.sortable_flag);
        this.mandatory_flag = this.constructor.getValue(obj.mandatory_flag);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'name', realName: 'name' },
            { name: 'options', realName: 'options' },
            { name: 'field_type', realName: 'field_type' },
            { name: 'id', realName: 'id' },
            { name: 'key', realName: 'key' },
            { name: 'order_nr', realName: 'order_nr' },
            { name: 'add_time', realName: 'add_time' },
            { name: 'update_time', realName: 'update_time' },
            { name: 'last_updated_by_user_id', realName: 'last_updated_by_user_id' },
            { name: 'active_flag', realName: 'active_flag' },
            { name: 'edit_flag', realName: 'edit_flag' },
            { name: 'add_visible_flag', realName: 'add_visible_flag' },
            { name: 'important_flag', realName: 'important_flag' },
            { name: 'bulk_edit_allowed', realName: 'bulk_edit_allowed' },
            { name: 'searchable_flag', realName: 'searchable_flag' },
            { name: 'filtering_allowed', realName: 'filtering_allowed' },
            { name: 'sortable_flag', realName: 'sortable_flag' },
            { name: 'mandatory_flag', realName: 'mandatory_flag' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = ProductField;
