/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Data27
 */
class Data27 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.title = this.constructor.getValue(obj.title);
        this.user_id = this.constructor.getValue(obj.user_id);
        this.visible_to = this.constructor.getValue(obj.visible_to);
        this.status = this.constructor.getValue(obj.status);
        this.value = this.constructor.getValue(obj.value);
        this.currency = this.constructor.getValue(obj.currency);
        this.person_name = this.constructor.getValue(obj.person_name);
        this.person_id = this.constructor.getValue(obj.person_id);
        this.organization_name = this.constructor.getValue(obj.organization_name);
        this.organization_id = this.constructor.getValue(obj.organization_id);
        this.formatted_value = this.constructor.getValue(obj.formatted_value);
        this.cc_email = this.constructor.getValue(obj.cc_email);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'title', realName: 'title' },
            { name: 'user_id', realName: 'user_id' },
            { name: 'visible_to', realName: 'visible_to' },
            { name: 'status', realName: 'status' },
            { name: 'value', realName: 'value' },
            { name: 'currency', realName: 'currency' },
            { name: 'person_name', realName: 'person_name' },
            { name: 'person_id', realName: 'person_id' },
            { name: 'organization_name', realName: 'organization_name' },
            { name: 'organization_id', realName: 'organization_id' },
            { name: 'formatted_value', realName: 'formatted_value' },
            { name: 'cc_email', realName: 'cc_email' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Data27;
