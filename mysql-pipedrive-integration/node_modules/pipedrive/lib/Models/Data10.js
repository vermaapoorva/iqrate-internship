/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Data10
 */
class Data10 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.company_id = this.constructor.getValue(obj.company_id);
        this.owner_id = this.constructor.getValue(obj.owner_id);
        this.user_id = this.constructor.getValue(obj.user_id);
        this.event_action = this.constructor.getValue(obj.event_action);
        this.event_object = this.constructor.getValue(obj.event_object);
        this.subscription_url = this.constructor.getValue(obj.subscription_url);
        this.is_active = this.constructor.getValue(obj.is_active);
        this.add_time = this.constructor.getValue(obj.add_time);
        this.remove_time = this.constructor.getValue(obj.remove_time);
        this.type = this.constructor.getValue(obj.type);
        this.http_auth_user = this.constructor.getValue(obj.http_auth_user);
        this.http_auth_password = this.constructor.getValue(obj.http_auth_password);
        this.additional_data = this.constructor.getValue(obj.additional_data);
        this.remove_reason = this.constructor.getValue(obj.remove_reason);
        this.last_delivery_time = this.constructor.getValue(obj.last_delivery_time);
        this.last_http_status = this.constructor.getValue(obj.last_http_status);
        this.admin_id = this.constructor.getValue(obj.admin_id);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'company_id', realName: 'company_id' },
            { name: 'owner_id', realName: 'owner_id' },
            { name: 'user_id', realName: 'user_id' },
            { name: 'event_action', realName: 'event_action' },
            { name: 'event_object', realName: 'event_object' },
            { name: 'subscription_url', realName: 'subscription_url' },
            { name: 'is_active', realName: 'is_active' },
            { name: 'add_time', realName: 'add_time', isDateTime: true, dateTimeValue: 'rfc3339' },
            {
                name: 'remove_time',
                realName: 'remove_time',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'type', realName: 'type' },
            { name: 'http_auth_user', realName: 'http_auth_user' },
            { name: 'http_auth_password', realName: 'http_auth_password' },
            { name: 'additional_data', realName: 'additional_data' },
            { name: 'remove_reason', realName: 'remove_reason' },
            {
                name: 'last_delivery_time',
                realName: 'last_delivery_time',
                isDateTime: true,
                dateTimeValue: 'date',
            },
            { name: 'last_http_status', realName: 'last_http_status' },
            { name: 'admin_id', realName: 'admin_id' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Data10;
