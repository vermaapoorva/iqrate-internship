/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of GlobalMessageData
 */
class GlobalMessageData extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.user_id = this.constructor.getValue(obj.user_id);
        this.company_id = this.constructor.getValue(obj.company_id);
        this.type_info = this.constructor.getValue(obj.type_info);
        this.user_data = this.constructor.getValue(obj.user_data);
        this.html = this.constructor.getValue(obj.html);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'user_id', realName: 'user_id' },
            { name: 'company_id', realName: 'company_id' },
            { name: 'type_info', realName: 'type_info', type: 'GlobalMessageUserData' },
            { name: 'user_data', realName: 'user_data' },
            { name: 'html', realName: 'html' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = GlobalMessageData;
