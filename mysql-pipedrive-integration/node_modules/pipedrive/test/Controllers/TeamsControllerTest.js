/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");

const controller = testerlib.TeamsController;
const Teams = testerlib.Teams;
const OrderByEnum = testerlib.OrderByEnum;
const NumberBooleanEnum = testerlib.NumberBooleanEnum;
const UserIDs = testerlib.UserIDs;

describe("TeamsController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Returns data about teams within the company
     */
    it("should testTestGetAllTeams response", function testTestGetAllTeamsTest(done) {
        // parameters for the API call
        let input = [];
        input['orderBy'] = OrderByEnum.id;
        input['skipUsers'] = null;

        controller.getAllTeams(input, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            assert.isNotNull(response);
            assert.isTrue(TestHelper.isProperSubsetOf(context.response.body, {"success": true, "data": [{"id": 1, "name": "Closers", "description": "Berlin office Sales Team", "manager_id": 4, "users": [2, 3, 4, 5], "active_flag": 1, "deleted_flag": 0, "add_time": "2019-10-07 09: 06: 09", "created_by_user_id": 2}, {"id": 2, "name": "Coffee", "description": "London office Sales Team", "manager_id": 7, "users": [5, 8], "active_flag": 0, "deleted_flag": 0, "add_time": "2018-04-11 12: 54: 43", "created_by_user_id": 7}]}, false, true, false));
            done();
        }).catch(() => undefined);
    });

});
