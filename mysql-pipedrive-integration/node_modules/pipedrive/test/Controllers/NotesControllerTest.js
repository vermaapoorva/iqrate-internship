/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");

const controller = testerlib.NotesController;
const GetNotes = testerlib.GetNotes;
const NumberBooleanEnum = testerlib.NumberBooleanEnum;
const PostNote = testerlib.PostNote;
const DeleteNote = testerlib.DeleteNote;

describe("NotesController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Returns all notes.
     */
    it("should testTestGetAllNotes response", function testTestGetAllNotesTest(done) {
        // parameters for the API call
        let input = [];
        input['userId'] = null;
        input['dealId'] = null;
        input['personId'] = null;
        input['orgId'] = null;
        input['start'] = 0;
        input['limit'] = null;
        input['sort'] = null;
        input['startDate'] = null;
        input['endDate'] = null;
        input['pinnedToDealFlag'] = null;
        input['pinnedToOrganizationFlag'] = null;
        input['pinnedToPersonFlag'] = null;

        controller.getAllNotes(input, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            assert.isNotNull(response);
            assert.isTrue(TestHelper.isProperSubsetOf(context.response.body, {"success": true, "data": [{"id": 1, "active_flag": true, "add_time": "2019-12-09 13: 59: 21", "content": "abc", "deal": {"title": "Deal title"}, "deal_id": 1, "last_update_user_id": 1, "org_id": 1, "organization": {"name": "Organization name"}, "person": {"name": "Person name"}, "person_id": 1, "pinned_to_deal_flag": true, "pinned_to_organization_flag": false, "pinned_to_person_flag": false, "update_time": "2019-12-09 14: 26: 11", "user": {"email": "user@email.com", "icon_url": "https: //iconurl.net/profile_120x120_123.jpg", "is_you": true, "name": "User Name"}, "user_id": 1}], "additional_data": {"limit": 100, "more_items_in_collection": false, "start": 0}}, false, true, false));
            done();
        }).catch(() => undefined);
    });

});
