/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");

const controller = testerlib.WebhooksController;
const WebhooksResponse = testerlib.WebhooksResponse;
const WebhooksResponse1 = testerlib.WebhooksResponse1;
const EventActionEnum = testerlib.EventActionEnum;
const EventObjectEnum = testerlib.EventObjectEnum;
const BaseResponse = testerlib.BaseResponse;

describe("WebhooksController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Returns data about all webhooks of a company.
     */
    it("should testTestGetAllWebhooks response", function testTestGetAllWebhooksTest(done) {
        controller.getAllWebhooks(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            assert.isNotNull(response);
            assert.isTrue(TestHelper.isProperSubsetOf(context.response.body, {"status": "ok", "success": true, "data": [{"id": 1, "company_id": 1, "owner_id": 1, "user_id": 1, "event_action": "added", "event_object": "activityType", "subscription_url": "http: //example.org", "is_active": 1, "add_time": "2019-10-25T08: 25: 27.000Z", "remove_time": null, "type": "general", "http_auth_user": "test", "http_auth_password": "test", "additional_data": {}, "remove_reason": null, "last_delivery_time": null, "last_http_status": null, "admin_id": 1}]}, false, true, false));
            done();
        }).catch(() => undefined);
    });

});
