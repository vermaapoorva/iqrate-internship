/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");

const controller = testerlib.RolesController;
const GetRoles = testerlib.GetRoles;
const PostRoles = testerlib.PostRoles;
const DeleteRole = testerlib.DeleteRole;
const GetRole = testerlib.GetRole;
const PutRole = testerlib.PutRole;
const DeleteRoleAssignment = testerlib.DeleteRoleAssignment;
const GetRoleAssignments = testerlib.GetRoleAssignments;
const PostRoleAssignment = testerlib.PostRoleAssignment;
const GetRoleSubroles = testerlib.GetRoleSubroles;
const GetRoleSettings = testerlib.GetRoleSettings;
const PostRoleSettings = testerlib.PostRoleSettings;
const SettingKeyEnum = testerlib.SettingKeyEnum;
const NumberBooleanEnum = testerlib.NumberBooleanEnum;

describe("RolesController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Add a role
     */
    it("should testTestAddARole response", function testTestAddARoleTest(done) {
        // parameters for the API call
        let input = [];
        input['contentType'] = null;
        input['body'] = null;

        controller.addARole(input, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            assert.isNotNull(response);
            assert.isTrue(TestHelper.isProperSubsetOf(context.response.body, {"success": true, "data": {"id": 2}}, false, true, false));
            done();
        }).catch(() => undefined);
    });

});
