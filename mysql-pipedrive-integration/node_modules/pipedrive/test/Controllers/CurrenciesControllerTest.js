/**
 * PipedriveAPIV1Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");

const controller = testerlib.CurrenciesController;
const Currencies = testerlib.Currencies;

describe("CurrenciesController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Returns all supported currencies in given account which should be used when saving monetary values with other objects. The 'code' parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.
     */
    it("should testTestGetAllSupportedCurrencies response", function testTestGetAllSupportedCurrenciesTest(done) {
        // parameters for the API call
        let term = null;

        controller.getAllSupportedCurrencies(term, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            assert.isNotNull(response);
            assert.isTrue(TestHelper.isProperSubsetOf(context.response.body, {"success": true, "data": [{"id": 1, "code": "EUR", "name": "Euro", "decimal_points": 2, "symbol": "â‚¬", "active_flag": true, "is_custom_flag": false}, {"id": 2, "code": "USD", "name": "US Dollar", "decimal_points": 2, "symbol": "$", "active_flag": true, "is_custom_flag": false}]}, false, true, false));
            done();
        }).catch(() => undefined);
    });

});
